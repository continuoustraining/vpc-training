AWSTemplateFormatVersion: '2010-09-09'

Resources:

  SimpleVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0/24
      EnableDnsSupport: false #default -> true
      EnableDnsHostnames: false #default -> false
      InstanceTenancy: 'default'
      Tags:
        -
         Key: SampleTag
         Value: !Join ['', [!Ref "AWS::StackName", "-VPC" ]]

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SimpleVPC
      CidrBlock: 192.168.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SimpleVPC
      CidrBlock: 192.168.2.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-B

  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public A

  PublicRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public B

  SimpleRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    RouteTableId: !Ref PublicRouteTableA
    SubnetId: !Ref PublicSubnetA

  SimpleRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    RouteTableId: !Ref PublicRouteTableB
    SubnetId: !Ref PublicSubnetB
 
  SimpleNATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
     AllocationId: !GetAtt ElasticIPAddress.AllocationId
     SubnetId: !Ref PublicSubnetA
     Tags:
     - Key: Name
       Value: !Sub NAT-${AWS::StackName}

  ElasticIPAddress:
   Type: AWS::EC2::EIP
   Properties:
     Domain: SimpleVPC

  SimpleNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: SimpleVPC
      Tags:
      - Key: Name
        Value: !Sub ACL-${AWS::StackName}

  SimpleNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !GetAtt SimpleVPC.CidrBlock
      Egress: false
      Icmp:
          Code: -1
          Type: -1
      NetworkAclId: !Ref SimpleNetworkAcl
      PortRange:
        From: 22
        To: 443
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1

  SimpleNATGateway:
    DependsOn: VPCGatewayAttach
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId
        SubnetId:
        Ref: Subnet
        Tags:
        - Key: foo
          Value: bar

  SimpleEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  SimpleRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT

