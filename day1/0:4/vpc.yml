AWSTemplateFormatVersion: '2010-09-09'

Resources:

  SimplePublicVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      EnableDnsSupport: false #default -> true
      EnableDnsHostnames: false #default -> false
      InstanceTenancy: 'default'
      Tags:
        -
         Key: Name
         Value: !Join ['', [!Ref "AWS::StackName", "-PublicVPC" ]]

  SimplePrivateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: false #default -> true
      EnableDnsHostnames: false #default -> false
      InstanceTenancy: 'default'
      Tags:
        -
         Key: Name
         Value: !Join ['', [!Ref "AWS::StackName", "-PrivateVPC" ]]

  SimpleVPCPeering:
   Type: AWS::EC2::VPCPeeringConnection
   Properties:
    PeerVpcId: !Ref SimplePublicVPC
    Tags:
      -
        Key: Name
        Value: !Join ['', [!Ref "AWS::StackName", "-VPCPeering" ]]
    VpcId: !Ref SimplePrivateVPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SimplePublicVPC
      CidrBlock: 192.168.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SimplePublicVPC
      Tags:
      - Key: Name
        Value: Public route table

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SimplePrivateVPC
      Tags:
      - Key: Name
        Value: Private route table

  PeeringRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId:
        Ref: PrivateRouteTable
      VpcPeeringConnectionId:
        Ref: SimpleVPCPeering

  PeeringRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 10.0.0.0/16
      RouteTableId:
        Ref: PublicRouteTable
      VpcPeeringConnectionId:
        Ref: SimpleVPCPeering

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref SimplePublicVPC
      InternetGatewayId: !Ref InternetGateway

  SimpleNATGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId: !GetAtt ElasticIPAddress.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
      - Key: Name
        Value: !Sub NAT-${AWS::StackName}

  ElasticIPAddress:
   Type: AWS::EC2::EIP
   Properties:
     Domain: SimplePublicVPC

  PublicEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Public instance security group
      VpcId:
        Ref: SimplePublicVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0

  PrivateEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private instance security group
      VpcId:
        Ref: SimplePrivateVPC
      SecurityGroupIngress:
      - IpProtocol: "-1"
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0

  SimpleNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: SimplePublicVPC
      Tags:
      - Key: Name
        Value: !Sub ACL-${AWS::StackName}

  SimpleNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !GetAtt SimplePublicVPC.CidrBlock
      Egress: false
      Icmp:
          Code: -1
          Type: -1
      NetworkAclId: !Ref SimpleNetworkAcl
      PortRange:
        From: 22
        To: 443
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1

